name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Check out submodules
      run: git submodule update --init --recursive

    - name: Install build tools
      run: |
        sudo apt-get install gcc-avr avr-libc ruby cmake
        sudo gem install ceedling
        sudo python -m pip install gcovr

    - name: Compile
      run: |
        ./setup.sh
        cd build && make -j32

    - name: Run Unit tests
      run: cd build && make test

    - name: Extract Firmware Version
      run: |
        echo "VERSION_MAJOR=$(cat src/version.h | grep VERSION_MAJOR | awk '{print $3}')" >> $GITHUB_ENV
        echo "VERSION_MINOR=$(cat src/version.h | grep VERSION_MINOR | awk '{print $3}')" >> $GITHUB_ENV
        echo "VERSION_PATCH=$(cat src/version.h | grep VERSION_PATCH | awk '{print $3}')" >> $GITHUB_ENV

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "output/*.elf,output/*.hex"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{env.VERSION_MAJOR}}.${{env.VERSION_MINOR}}.${{env.VERSION_PATCH}}